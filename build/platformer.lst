                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 12 00:29:33 2017
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc45160
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _initialize
                             13 	.globl _init_player
                             14 	.globl _game_loop
                             15 	.globl _draw_player
                             16 	.globl _read_controls
                             17 	.globl _player_y
                             18 	.globl _player_x
                             19 	.globl _PLAYER_SPRITE_PALETTE
                             20 	.globl _PLAYER_SPRITE_DATA
                             21 	.globl _PLAYER_SPRITE_NUM
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; special function bits 
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DATA
   0000                      32 _player_x::
   0000                      33 	.ds 1
   0001                      34 _player_y::
   0001                      35 	.ds 1
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in internal ram 
                             38 ;--------------------------------------------------------
                             39 	.area _OVERLAY
                             40 ;--------------------------------------------------------
                             41 ; indirectly addressable internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area _ISEG
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area _BSEG
                             48 ;--------------------------------------------------------
                             49 ; external ram data
                             50 ;--------------------------------------------------------
                             51 	.area _XSEG
                             52 ;--------------------------------------------------------
                             53 ; global & static initialisations
                             54 ;--------------------------------------------------------
                             55 	.area _GSINIT
                             56 	.area _GSFINAL
                             57 	.area _GSINIT
                             58 ;--------------------------------------------------------
                             59 ; Home
                             60 ;--------------------------------------------------------
                             61 	.area _HOME
                             62 	.area _CODE
                             63 ;--------------------------------------------------------
                             64 ; code
                             65 ;--------------------------------------------------------
                             66 	.area _CODE
                             67 ;	src/platformer.c 19
                             68 ;	genLabel
                             69 ;	genFunction
                             70 ;	---------------------------------
                             71 ; Function read_controls
                             72 ; ---------------------------------
   0000                      73 ___read_controls_start:
   0000                      74 _read_controls:
                             75 	
                             76 ;	src/platformer.c 20
                             77 ;	genCall
                             78 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 CD 00 00             79 	call	_joypad
   0003 4B                   80 	ld	c,e
                             81 ;	genAssign
                             82 ;	(registers are the same)
                             83 ;	src/platformer.c 22
                             84 ;	genAnd
   0004 79                   85 	ld	a,c
   0005 E6 04                86 	and	a,#0x04
   0007 20 03                87 	jr	nz,00115$
   0009 C3 10 00             88 	jp	00102$
   000C                      89 00115$:
                             90 ;	src/platformer.c 23
                             91 ;	genMinus
                             92 ;	AOP_HL for _player_y
   000C 21 01 00             93 	ld	hl,#_player_y
   000F 35                   94 	dec	(hl)
                             95 ;	genLabel
   0010                      96 00102$:
                             97 ;	src/platformer.c 25
                             98 ;	genAnd
   0010 79                   99 	ld	a,c
   0011 E6 08               100 	and	a,#0x08
   0013 20 03               101 	jr	nz,00116$
   0015 C3 1C 00            102 	jp	00104$
   0018                     103 00116$:
                            104 ;	src/platformer.c 26
                            105 ;	genPlus
                            106 ;	AOP_HL for _player_y
                            107 ;	genPlusIncr
   0018 21 01 00            108 	ld	hl,#_player_y
   001B 34                  109 	inc	(hl)
                            110 ;	genLabel
   001C                     111 00104$:
                            112 ;	src/platformer.c 28
                            113 ;	genAnd
   001C 79                  114 	ld	a,c
   001D E6 01               115 	and	a,#0x01
   001F 20 03               116 	jr	nz,00117$
   0021 C3 28 00            117 	jp	00106$
   0024                     118 00117$:
                            119 ;	src/platformer.c 29
                            120 ;	genPlus
                            121 ;	AOP_HL for _player_x
                            122 ;	genPlusIncr
   0024 21 00 00            123 	ld	hl,#_player_x
   0027 34                  124 	inc	(hl)
                            125 ;	genLabel
   0028                     126 00106$:
                            127 ;	src/platformer.c 31
                            128 ;	genAnd
   0028 79                  129 	ld	a,c
   0029 E6 02               130 	and	a,#0x02
   002B 20 03               131 	jr	nz,00118$
   002D C3 34 00            132 	jp	00109$
   0030                     133 00118$:
                            134 ;	src/platformer.c 32
                            135 ;	genMinus
                            136 ;	AOP_HL for _player_x
   0030 21 00 00            137 	ld	hl,#_player_x
   0033 35                  138 	dec	(hl)
                            139 ;	genLabel
   0034                     140 00109$:
                            141 ;	genEndFunction
                            142 	
   0034 C9                  143 	ret
   0035                     144 ___read_controls_end:
   0035                     145 _PLAYER_SPRITE_NUM:
   0035 00                  146 	.db #0x00
   0036                     147 _PLAYER_SPRITE_DATA:
   0036 3C                  148 	.db #0x3C
   0037 3C                  149 	.db #0x3C
   0038 42                  150 	.db #0x42
   0039 42                  151 	.db #0x42
   003A 3C                  152 	.db #0x3C
   003B 3C                  153 	.db #0x3C
   003C 00                  154 	.db #0x00
   003D 7E                  155 	.db #0x7E
   003E 00                  156 	.db #0x00
   003F 18                  157 	.db #0x18
   0040 00                  158 	.db #0x00
   0041 18                  159 	.db #0x18
   0042 24                  160 	.db #0x24
   0043 00                  161 	.db #0x00
   0044 42                  162 	.db #0x42
   0045 00                  163 	.db #0x00
   0046                     164 _PLAYER_SPRITE_PALETTE:
   0046 1F 00               165 	.dw #0x001F
   0048 FF 00               166 	.dw #0x00FF
   004A E0 00               167 	.dw #0x00E0
   004C 00 7C               168 	.dw #0x7C00
                            169 ;	src/platformer.c 35
                            170 ;	genLabel
                            171 ;	genFunction
                            172 ;	---------------------------------
                            173 ; Function draw_player
                            174 ; ---------------------------------
   004E                     175 ___draw_player_start:
   004E                     176 _draw_player:
                            177 	
                            178 ;	src/platformer.c 36
                            179 ;	genAssign
                            180 ;	AOP_HL for _PLAYER_SPRITE_NUM
   004E 21 35 00            181 	ld	hl,#_PLAYER_SPRITE_NUM
   0051 4E                  182 	ld	c,(hl)
                            183 ;	genIpush
                            184 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            185 ;	AOP_HL for _player_y
   0052 21 01 00            186 	ld	hl,#_player_y
   0055 7E                  187 	ld	a,(hl)
   0056 F5                  188 	push	af
   0057 33                  189 	inc	sp
                            190 ;	genIpush
                            191 ;	AOP_HL for _player_x
   0058 21 00 00            192 	ld	hl,#_player_x
   005B 7E                  193 	ld	a,(hl)
   005C F5                  194 	push	af
   005D 33                  195 	inc	sp
                            196 ;	genIpush
   005E 79                  197 	ld	a,c
   005F F5                  198 	push	af
   0060 33                  199 	inc	sp
                            200 ;	genCall
   0061 CD 00 00            201 	call	_move_sprite
   0064 E8 03               202 	lda	sp,3(sp)
                            203 ;	genLabel
   0066                     204 00101$:
                            205 ;	genEndFunction
                            206 	
   0066 C9                  207 	ret
   0067                     208 ___draw_player_end:
                            209 ;	src/platformer.c 39
                            210 ;	genLabel
                            211 ;	genFunction
                            212 ;	---------------------------------
                            213 ; Function game_loop
                            214 ; ---------------------------------
   0067                     215 ___game_loop_start:
   0067                     216 _game_loop:
                            217 	
                            218 ;	src/platformer.c 40
                            219 ;	genCall
                            220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0067 CD 00 00            221 	call	_read_controls
                            222 ;	src/platformer.c 41
                            223 ;	genCall
                            224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006A CD 4E 00            225 	call	_draw_player
                            226 ;	genLabel
   006D                     227 00101$:
                            228 ;	genEndFunction
                            229 	
   006D C9                  230 	ret
   006E                     231 ___game_loop_end:
                            232 ;	src/platformer.c 44
                            233 ;	genLabel
                            234 ;	genFunction
                            235 ;	---------------------------------
                            236 ; Function init_player
                            237 ; ---------------------------------
   006E                     238 ___init_player_start:
   006E                     239 _init_player:
                            240 	
                            241 ;	src/platformer.c 45
                            242 ;	genAssign
                            243 ;	AOP_HL for _player_x
   006E 21 00 00            244 	ld	hl,#_player_x
   0071 36 28               245 	ld	(hl),#0x28
                            246 ;	src/platformer.c 46
                            247 ;	genAssign
                            248 ;	AOP_HL for _player_y
   0073 21 01 00            249 	ld	hl,#_player_y
   0076 36 28               250 	ld	(hl),#0x28
                            251 ;	src/platformer.c 48
                            252 ;	genAssign
                            253 ;	AOP_HL for _PLAYER_SPRITE_NUM
   0078 21 35 00            254 	ld	hl,#_PLAYER_SPRITE_NUM
   007B 4E                  255 	ld	c,(hl)
                            256 ;	genIpush
                            257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007C 21 36 00            258 	ld	hl,#_PLAYER_SPRITE_DATA
   007F E5                  259 	push	hl
                            260 ;	genIpush
   0080 3E 01               261 	ld	a,#0x01
   0082 F5                  262 	push	af
   0083 33                  263 	inc	sp
                            264 ;	genIpush
   0084 79                  265 	ld	a,c
   0085 F5                  266 	push	af
   0086 33                  267 	inc	sp
                            268 ;	genCall
   0087 CD 00 00            269 	call	_set_sprite_data
   008A E8 04               270 	lda	sp,4(sp)
                            271 ;	src/platformer.c 49
                            272 ;	genAssign
                            273 ;	AOP_HL for _PLAYER_SPRITE_NUM
   008C 21 35 00            274 	ld	hl,#_PLAYER_SPRITE_NUM
   008F 4E                  275 	ld	c,(hl)
                            276 ;	genIpush
                            277 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0090 3E 00               278 	ld	a,#0x00
   0092 F5                  279 	push	af
   0093 33                  280 	inc	sp
                            281 ;	genIpush
   0094 79                  282 	ld	a,c
   0095 F5                  283 	push	af
   0096 33                  284 	inc	sp
                            285 ;	genCall
   0097 CD 00 00            286 	call	_set_sprite_tile
   009A E8 02               287 	lda	sp,2(sp)
                            288 ;	src/platformer.c 50
                            289 ;	genAssign
                            290 ;	AOP_HL for _PLAYER_SPRITE_NUM
   009C 21 35 00            291 	ld	hl,#_PLAYER_SPRITE_NUM
   009F 4E                  292 	ld	c,(hl)
                            293 ;	genIpush
                            294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A0 3E 10               295 	ld	a,#0x10
   00A2 F5                  296 	push	af
   00A3 33                  297 	inc	sp
                            298 ;	genIpush
   00A4 79                  299 	ld	a,c
   00A5 F5                  300 	push	af
   00A6 33                  301 	inc	sp
                            302 ;	genCall
   00A7 CD 00 00            303 	call	_set_sprite_prop
   00AA E8 02               304 	lda	sp,2(sp)
                            305 ;	src/platformer.c 51
                            306 ;	genAssign
                            307 ;	AOP_HL for _PLAYER_SPRITE_NUM
   00AC 21 35 00            308 	ld	hl,#_PLAYER_SPRITE_NUM
   00AF 4E                  309 	ld	c,(hl)
                            310 ;	genIpush
                            311 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B0 21 46 00            312 	ld	hl,#_PLAYER_SPRITE_PALETTE
   00B3 E5                  313 	push	hl
                            314 ;	genIpush
   00B4 3E 01               315 	ld	a,#0x01
   00B6 F5                  316 	push	af
   00B7 33                  317 	inc	sp
                            318 ;	genIpush
   00B8 79                  319 	ld	a,c
   00B9 F5                  320 	push	af
   00BA 33                  321 	inc	sp
                            322 ;	genCall
   00BB CD 00 00            323 	call	_set_sprite_palette
   00BE E8 04               324 	lda	sp,4(sp)
                            325 ;	genLabel
   00C0                     326 00101$:
                            327 ;	genEndFunction
                            328 	
   00C0 C9                  329 	ret
   00C1                     330 ___init_player_end:
                            331 ;	src/platformer.c 54
                            332 ;	genLabel
                            333 ;	genFunction
                            334 ;	---------------------------------
                            335 ; Function initialize
                            336 ; ---------------------------------
   00C1                     337 ___initialize_start:
   00C1                     338 _initialize:
   00C1 E8 FD               339 	lda	sp,-3(sp)
                            340 ;	src/platformer.c 55
                            341 ;	genCall
                            342 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00C3 CD 00 00            343 	call	_cgb_compatibility
                            344 ;	src/platformer.c 57
                            345 ;	genCall
                            346 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00C6 CD 6E 00            347 	call	_init_player
                            348 ;	src/platformer.c 59
                            349 ;	genAssign
   00C9 01 40 FF            350 	ld	bc,#0xFF40
                            351 ;	genAssign
                            352 ;	AOP_STK for _initialize_sloc0_1_0
   00CC F8 01               353 	lda	hl,1(sp)
   00CE 36 40               354 	ld	(hl),#0x40
   00D0 23                  355 	inc	hl
   00D1 36 FF               356 	ld	(hl),#0xFF
                            357 ;	genPointerGet
                            358 ;	AOP_STK for _initialize_sloc0_1_0
                            359 ;	AOP_STK for _initialize_sloc1_1_0
   00D3 2B                  360 	dec	hl
   00D4 5E                  361 	ld	e,(hl)
   00D5 23                  362 	inc	hl
   00D6 56                  363 	ld	d,(hl)
   00D7 1A                  364 	ld	a,(de)
   00D8 2B                  365 	dec	hl
   00D9 2B                  366 	dec	hl
                            367 ;	genOr
                            368 ;	AOP_STK for _initialize_sloc1_1_0
   00DA 77                  369 	ld      (hl),a
   00DB 7F                  370 	ld      a,a
   00DC F6 02               371 	or	a,#0x02
                            372 ;	genAssign (pointer)
   00DE 02                  373 	ld	(bc),a
                            374 ;	genLabel
   00DF                     375 00101$:
                            376 ;	genEndFunction
   00DF E8 03               377 	lda	sp,3(sp)
   00E1 C9                  378 	ret
   00E2                     379 ___initialize_end:
                            380 ;	src/platformer.c 62
                            381 ;	genLabel
                            382 ;	genFunction
                            383 ;	---------------------------------
                            384 ; Function main
                            385 ; ---------------------------------
   00E2                     386 ___main_start:
   00E2                     387 _main:
                            388 	
                            389 ;	src/platformer.c 63
                            390 ;	genCall
                            391 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E2 CD C1 00            392 	call	_initialize
                            393 ;	src/platformer.c 65
                            394 ;	genLabel
   00E5                     395 00102$:
                            396 ;	src/platformer.c 66
                            397 ;	genCall
                            398 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E5 CD 00 00            399 	call	_wait_vbl_done
                            400 ;	src/platformer.c 67
                            401 ;	genCall
                            402 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E8 CD 67 00            403 	call	_game_loop
                            404 ;	genGoto
   00EB C3 E5 00            405 	jp	00102$
                            406 ;	genLabel
   00EE                     407 00104$:
                            408 ;	genEndFunction
                            409 	
   00EE C9                  410 	ret
   00EF                     411 ___main_end:
                            412 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 _PLAYER_SPRITE_DATA                0036 GR
  0 _PLAYER_SPRITE_NUM                 0035 GR
  0 _PLAYER_SPRITE_PALETTE             0046 GR
  0 ___draw_player_end                 0067 R
  0 ___draw_player_start               004E R
  0 ___game_loop_end                   006E R
  0 ___game_loop_start                 0067 R
  0 ___init_player_end                 00C1 R
  0 ___init_player_start               006E R
  0 ___initialize_end                  00E2 R
  0 ___initialize_start                00C1 R
  0 ___main_end                        00EF R
  0 ___main_start                      00E2 R
  0 ___read_controls_end               0035 R
  0 ___read_controls_start             0000 R
    _cgb_compatibility                 **** GX
  0 _draw_player                       004E GR
  0 _game_loop                         0067 GR
  0 _init_player                       006E GR
  0 _initialize                        00C1 GR
    _joypad                            **** GX
  0 _main                              00E2 GR
    _move_sprite                       **** GX
  1 _player_x                          0000 GR
  1 _player_y                          0001 GR
  0 _read_controls                     0000 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   EF   flags 0
   1 _DATA                              size    2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
