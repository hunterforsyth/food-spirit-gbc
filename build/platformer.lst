                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 12 01:02:18 2017
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc50840
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _initialize
                             13 	.globl _init_player
                             14 	.globl _game_loop
                             15 	.globl _draw_player
                             16 	.globl _read_controls
                             17 	.globl _player_y
                             18 	.globl _player_x
                             19 	.globl _PLAYER_SPRITE_BOT_PALETTE
                             20 	.globl _PLAYER_SPRITE_TOP_PALETTE
                             21 	.globl _PLAYER_SPRITE_BOT_DATA
                             22 	.globl _PLAYER_SPRITE_TOP_DATA
                             23 	.globl _PLAYER_SPRITE_BOT_NUM
                             24 	.globl _PLAYER_SPRITE_TOP_NUM
                             25 ;--------------------------------------------------------
                             26 ; special function registers
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; special function bits 
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DATA
   0000                      35 _player_x::
   0000                      36 	.ds 1
   0001                      37 _player_y::
   0001                      38 	.ds 1
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in internal ram 
                             41 ;--------------------------------------------------------
                             42 	.area _OVERLAY
                             43 ;--------------------------------------------------------
                             44 ; indirectly addressable internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area _ISEG
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area _BSEG
                             51 ;--------------------------------------------------------
                             52 ; external ram data
                             53 ;--------------------------------------------------------
                             54 	.area _XSEG
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _GSINIT
                             59 	.area _GSFINAL
                             60 	.area _GSINIT
                             61 ;--------------------------------------------------------
                             62 ; Home
                             63 ;--------------------------------------------------------
                             64 	.area _HOME
                             65 	.area _CODE
                             66 ;--------------------------------------------------------
                             67 ; code
                             68 ;--------------------------------------------------------
                             69 	.area _CODE
                             70 ;	src/platformer.c 26
                             71 ;	genLabel
                             72 ;	genFunction
                             73 ;	---------------------------------
                             74 ; Function read_controls
                             75 ; ---------------------------------
   0000                      76 ___read_controls_start:
   0000                      77 _read_controls:
                             78 	
                             79 ;	src/platformer.c 27
                             80 ;	genCall
                             81 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 CD 00 00             82 	call	_joypad
   0003 4B                   83 	ld	c,e
                             84 ;	genAssign
                             85 ;	(registers are the same)
                             86 ;	src/platformer.c 29
                             87 ;	genAnd
   0004 79                   88 	ld	a,c
   0005 E6 04                89 	and	a,#0x04
   0007 20 03                90 	jr	nz,00115$
   0009 C3 10 00             91 	jp	00102$
   000C                      92 00115$:
                             93 ;	src/platformer.c 30
                             94 ;	genMinus
                             95 ;	AOP_HL for _player_y
   000C 21 01 00             96 	ld	hl,#_player_y
   000F 35                   97 	dec	(hl)
                             98 ;	genLabel
   0010                      99 00102$:
                            100 ;	src/platformer.c 32
                            101 ;	genAnd
   0010 79                  102 	ld	a,c
   0011 E6 08               103 	and	a,#0x08
   0013 20 03               104 	jr	nz,00116$
   0015 C3 1C 00            105 	jp	00104$
   0018                     106 00116$:
                            107 ;	src/platformer.c 33
                            108 ;	genPlus
                            109 ;	AOP_HL for _player_y
                            110 ;	genPlusIncr
   0018 21 01 00            111 	ld	hl,#_player_y
   001B 34                  112 	inc	(hl)
                            113 ;	genLabel
   001C                     114 00104$:
                            115 ;	src/platformer.c 35
                            116 ;	genAnd
   001C 79                  117 	ld	a,c
   001D E6 01               118 	and	a,#0x01
   001F 20 03               119 	jr	nz,00117$
   0021 C3 28 00            120 	jp	00106$
   0024                     121 00117$:
                            122 ;	src/platformer.c 36
                            123 ;	genPlus
                            124 ;	AOP_HL for _player_x
                            125 ;	genPlusIncr
   0024 21 00 00            126 	ld	hl,#_player_x
   0027 34                  127 	inc	(hl)
                            128 ;	genLabel
   0028                     129 00106$:
                            130 ;	src/platformer.c 38
                            131 ;	genAnd
   0028 79                  132 	ld	a,c
   0029 E6 02               133 	and	a,#0x02
   002B 20 03               134 	jr	nz,00118$
   002D C3 34 00            135 	jp	00109$
   0030                     136 00118$:
                            137 ;	src/platformer.c 39
                            138 ;	genMinus
                            139 ;	AOP_HL for _player_x
   0030 21 00 00            140 	ld	hl,#_player_x
   0033 35                  141 	dec	(hl)
                            142 ;	genLabel
   0034                     143 00109$:
                            144 ;	genEndFunction
                            145 	
   0034 C9                  146 	ret
   0035                     147 ___read_controls_end:
   0035                     148 _PLAYER_SPRITE_TOP_NUM:
   0035 00                  149 	.db #0x00
   0036                     150 _PLAYER_SPRITE_BOT_NUM:
   0036 01                  151 	.db #0x01
   0037                     152 _PLAYER_SPRITE_TOP_DATA:
   0037 00                  153 	.db #0x00
   0038 18                  154 	.db #0x18
   0039 18                  155 	.db #0x18
   003A 66                  156 	.db #0x66
   003B 7E                  157 	.db #0x7E
   003C A5                  158 	.db #0xA5
   003D 7E                  159 	.db #0x7E
   003E A5                  160 	.db #0xA5
   003F 3C                  161 	.db #0x3C
   0040 42                  162 	.db #0x42
   0041 00                  163 	.db #0x00
   0042 3C                  164 	.db #0x3C
   0043 00                  165 	.db #0x00
   0044 3C                  166 	.db #0x3C
   0045 00                  167 	.db #0x00
   0046 5A                  168 	.db #0x5A
   0047                     169 _PLAYER_SPRITE_BOT_DATA:
   0047 00                  170 	.db #0x00
   0048 5A                  171 	.db #0x5A
   0049 00                  172 	.db #0x00
   004A 5A                  173 	.db #0x5A
   004B 18                  174 	.db #0x18
   004C 42                  175 	.db #0x42
   004D 18                  176 	.db #0x18
   004E 00                  177 	.db #0x00
   004F 24                  178 	.db #0x24
   0050 00                  179 	.db #0x00
   0051 24                  180 	.db #0x24
   0052 00                  181 	.db #0x00
   0053 42                  182 	.db #0x42
   0054 00                  183 	.db #0x00
   0055 00                  184 	.db #0x00
   0056 42                  185 	.db #0x42
   0057                     186 _PLAYER_SPRITE_TOP_PALETTE:
   0057 00 00               187 	.dw #0x0000
   0059 34 46               188 	.dw #0x4634
   005B 00 00               189 	.dw #0x0000
   005D A5 20               190 	.dw #0x20A5
   005F                     191 _PLAYER_SPRITE_BOT_PALETTE:
   005F 00 00               192 	.dw #0x0000
   0061 00 7C               193 	.dw #0x7C00
   0063 00 00               194 	.dw #0x0000
   0065 00 00               195 	.dw #0x0000
                            196 ;	src/platformer.c 42
                            197 ;	genLabel
                            198 ;	genFunction
                            199 ;	---------------------------------
                            200 ; Function draw_player
                            201 ; ---------------------------------
   0067                     202 ___draw_player_start:
   0067                     203 _draw_player:
                            204 	
                            205 ;	src/platformer.c 43
                            206 ;	genAssign
                            207 ;	AOP_HL for _PLAYER_SPRITE_BOT_NUM
   0067 21 36 00            208 	ld	hl,#_PLAYER_SPRITE_BOT_NUM
   006A 4E                  209 	ld	c,(hl)
                            210 ;	genIpush
                            211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            212 ;	AOP_HL for _player_y
   006B 21 01 00            213 	ld	hl,#_player_y
   006E 7E                  214 	ld	a,(hl)
   006F F5                  215 	push	af
   0070 33                  216 	inc	sp
                            217 ;	genIpush
                            218 ;	AOP_HL for _player_x
   0071 21 00 00            219 	ld	hl,#_player_x
   0074 7E                  220 	ld	a,(hl)
   0075 F5                  221 	push	af
   0076 33                  222 	inc	sp
                            223 ;	genIpush
   0077 79                  224 	ld	a,c
   0078 F5                  225 	push	af
   0079 33                  226 	inc	sp
                            227 ;	genCall
   007A CD 00 00            228 	call	_move_sprite
   007D E8 03               229 	lda	sp,3(sp)
                            230 ;	src/platformer.c 44
                            231 ;	genMinus
                            232 ;	AOP_HL for _player_y
   007F 21 01 00            233 	ld	hl,#_player_y
   0082 7E                  234 	ld	a,(hl)
   0083 C6 F8               235 	add	a,#0xF8
   0085 4F                  236 	ld	c,a
                            237 ;	genAssign
                            238 ;	AOP_HL for _PLAYER_SPRITE_TOP_NUM
   0086 21 35 00            239 	ld	hl,#_PLAYER_SPRITE_TOP_NUM
   0089 46                  240 	ld	b,(hl)
                            241 ;	genIpush
                            242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 79                  243 	ld	a,c
   008B F5                  244 	push	af
   008C 33                  245 	inc	sp
                            246 ;	genIpush
                            247 ;	AOP_HL for _player_x
   008D 21 00 00            248 	ld	hl,#_player_x
   0090 7E                  249 	ld	a,(hl)
   0091 F5                  250 	push	af
   0092 33                  251 	inc	sp
                            252 ;	genIpush
   0093 78                  253 	ld	a,b
   0094 F5                  254 	push	af
   0095 33                  255 	inc	sp
                            256 ;	genCall
   0096 CD 00 00            257 	call	_move_sprite
   0099 E8 03               258 	lda	sp,3(sp)
                            259 ;	genLabel
   009B                     260 00101$:
                            261 ;	genEndFunction
                            262 	
   009B C9                  263 	ret
   009C                     264 ___draw_player_end:
                            265 ;	src/platformer.c 47
                            266 ;	genLabel
                            267 ;	genFunction
                            268 ;	---------------------------------
                            269 ; Function game_loop
                            270 ; ---------------------------------
   009C                     271 ___game_loop_start:
   009C                     272 _game_loop:
                            273 	
                            274 ;	src/platformer.c 48
                            275 ;	genCall
                            276 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009C CD 00 00            277 	call	_read_controls
                            278 ;	src/platformer.c 49
                            279 ;	genCall
                            280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009F CD 67 00            281 	call	_draw_player
                            282 ;	genLabel
   00A2                     283 00101$:
                            284 ;	genEndFunction
                            285 	
   00A2 C9                  286 	ret
   00A3                     287 ___game_loop_end:
                            288 ;	src/platformer.c 52
                            289 ;	genLabel
                            290 ;	genFunction
                            291 ;	---------------------------------
                            292 ; Function init_player
                            293 ; ---------------------------------
   00A3                     294 ___init_player_start:
   00A3                     295 _init_player:
                            296 	
                            297 ;	src/platformer.c 53
                            298 ;	genAssign
                            299 ;	AOP_HL for _player_x
   00A3 21 00 00            300 	ld	hl,#_player_x
   00A6 36 28               301 	ld	(hl),#0x28
                            302 ;	src/platformer.c 54
                            303 ;	genAssign
                            304 ;	AOP_HL for _player_y
   00A8 21 01 00            305 	ld	hl,#_player_y
   00AB 36 28               306 	ld	(hl),#0x28
                            307 ;	src/platformer.c 56
                            308 ;	genAssign
                            309 ;	AOP_HL for _PLAYER_SPRITE_TOP_NUM
   00AD 21 35 00            310 	ld	hl,#_PLAYER_SPRITE_TOP_NUM
   00B0 4E                  311 	ld	c,(hl)
                            312 ;	genIpush
                            313 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 37 00            314 	ld	hl,#_PLAYER_SPRITE_TOP_DATA
   00B4 E5                  315 	push	hl
                            316 ;	genIpush
   00B5 3E 01               317 	ld	a,#0x01
   00B7 F5                  318 	push	af
   00B8 33                  319 	inc	sp
                            320 ;	genIpush
   00B9 79                  321 	ld	a,c
   00BA F5                  322 	push	af
   00BB 33                  323 	inc	sp
                            324 ;	genCall
   00BC CD 00 00            325 	call	_set_sprite_data
   00BF E8 04               326 	lda	sp,4(sp)
                            327 ;	src/platformer.c 57
                            328 ;	genAssign
                            329 ;	AOP_HL for _PLAYER_SPRITE_TOP_NUM
   00C1 21 35 00            330 	ld	hl,#_PLAYER_SPRITE_TOP_NUM
   00C4 4E                  331 	ld	c,(hl)
                            332 ;	genIpush
                            333 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00C5 79                  334 	ld	a,c
   00C6 F5                  335 	push	af
   00C7 33                  336 	inc	sp
                            337 ;	genIpush
   00C8 79                  338 	ld	a,c
   00C9 F5                  339 	push	af
   00CA 33                  340 	inc	sp
                            341 ;	genCall
   00CB CD 00 00            342 	call	_set_sprite_tile
   00CE E8 02               343 	lda	sp,2(sp)
                            344 ;	src/platformer.c 58
                            345 ;	genAssign
                            346 ;	AOP_HL for _PLAYER_SPRITE_TOP_NUM
   00D0 21 35 00            347 	ld	hl,#_PLAYER_SPRITE_TOP_NUM
   00D3 4E                  348 	ld	c,(hl)
                            349 ;	genIpush
                            350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 57 00            351 	ld	hl,#_PLAYER_SPRITE_TOP_PALETTE
   00D7 E5                  352 	push	hl
                            353 ;	genIpush
   00D8 3E 01               354 	ld	a,#0x01
   00DA F5                  355 	push	af
   00DB 33                  356 	inc	sp
                            357 ;	genIpush
   00DC 79                  358 	ld	a,c
   00DD F5                  359 	push	af
   00DE 33                  360 	inc	sp
                            361 ;	genCall
   00DF CD 00 00            362 	call	_set_sprite_palette
   00E2 E8 04               363 	lda	sp,4(sp)
                            364 ;	src/platformer.c 59
                            365 ;	genAssign
                            366 ;	AOP_HL for _PLAYER_SPRITE_TOP_NUM
   00E4 21 35 00            367 	ld	hl,#_PLAYER_SPRITE_TOP_NUM
   00E7 4E                  368 	ld	c,(hl)
                            369 ;	genIpush
                            370 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E8 79                  371 	ld	a,c
   00E9 F5                  372 	push	af
   00EA 33                  373 	inc	sp
                            374 ;	genIpush
   00EB 79                  375 	ld	a,c
   00EC F5                  376 	push	af
   00ED 33                  377 	inc	sp
                            378 ;	genCall
   00EE CD 00 00            379 	call	_set_sprite_prop
   00F1 E8 02               380 	lda	sp,2(sp)
                            381 ;	src/platformer.c 61
                            382 ;	genAssign
                            383 ;	AOP_HL for _PLAYER_SPRITE_BOT_NUM
   00F3 21 36 00            384 	ld	hl,#_PLAYER_SPRITE_BOT_NUM
   00F6 4E                  385 	ld	c,(hl)
                            386 ;	genIpush
                            387 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00F7 21 47 00            388 	ld	hl,#_PLAYER_SPRITE_BOT_DATA
   00FA E5                  389 	push	hl
                            390 ;	genIpush
   00FB 3E 01               391 	ld	a,#0x01
   00FD F5                  392 	push	af
   00FE 33                  393 	inc	sp
                            394 ;	genIpush
   00FF 79                  395 	ld	a,c
   0100 F5                  396 	push	af
   0101 33                  397 	inc	sp
                            398 ;	genCall
   0102 CD 00 00            399 	call	_set_sprite_data
   0105 E8 04               400 	lda	sp,4(sp)
                            401 ;	src/platformer.c 62
                            402 ;	genAssign
                            403 ;	AOP_HL for _PLAYER_SPRITE_BOT_NUM
   0107 21 36 00            404 	ld	hl,#_PLAYER_SPRITE_BOT_NUM
   010A 4E                  405 	ld	c,(hl)
                            406 ;	genIpush
                            407 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   010B 79                  408 	ld	a,c
   010C F5                  409 	push	af
   010D 33                  410 	inc	sp
                            411 ;	genIpush
   010E 79                  412 	ld	a,c
   010F F5                  413 	push	af
   0110 33                  414 	inc	sp
                            415 ;	genCall
   0111 CD 00 00            416 	call	_set_sprite_tile
   0114 E8 02               417 	lda	sp,2(sp)
                            418 ;	src/platformer.c 63
                            419 ;	genAssign
                            420 ;	AOP_HL for _PLAYER_SPRITE_BOT_NUM
   0116 21 36 00            421 	ld	hl,#_PLAYER_SPRITE_BOT_NUM
   0119 4E                  422 	ld	c,(hl)
                            423 ;	genIpush
                            424 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   011A 21 5F 00            425 	ld	hl,#_PLAYER_SPRITE_BOT_PALETTE
   011D E5                  426 	push	hl
                            427 ;	genIpush
   011E 3E 01               428 	ld	a,#0x01
   0120 F5                  429 	push	af
   0121 33                  430 	inc	sp
                            431 ;	genIpush
   0122 79                  432 	ld	a,c
   0123 F5                  433 	push	af
   0124 33                  434 	inc	sp
                            435 ;	genCall
   0125 CD 00 00            436 	call	_set_sprite_palette
   0128 E8 04               437 	lda	sp,4(sp)
                            438 ;	src/platformer.c 64
                            439 ;	genAssign
                            440 ;	AOP_HL for _PLAYER_SPRITE_BOT_NUM
   012A 21 36 00            441 	ld	hl,#_PLAYER_SPRITE_BOT_NUM
   012D 4E                  442 	ld	c,(hl)
                            443 ;	genIpush
                            444 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   012E 79                  445 	ld	a,c
   012F F5                  446 	push	af
   0130 33                  447 	inc	sp
                            448 ;	genIpush
   0131 79                  449 	ld	a,c
   0132 F5                  450 	push	af
   0133 33                  451 	inc	sp
                            452 ;	genCall
   0134 CD 00 00            453 	call	_set_sprite_prop
   0137 E8 02               454 	lda	sp,2(sp)
                            455 ;	genLabel
   0139                     456 00101$:
                            457 ;	genEndFunction
                            458 	
   0139 C9                  459 	ret
   013A                     460 ___init_player_end:
                            461 ;	src/platformer.c 67
                            462 ;	genLabel
                            463 ;	genFunction
                            464 ;	---------------------------------
                            465 ; Function initialize
                            466 ; ---------------------------------
   013A                     467 ___initialize_start:
   013A                     468 _initialize:
   013A E8 FD               469 	lda	sp,-3(sp)
                            470 ;	src/platformer.c 68
                            471 ;	genCall
                            472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   013C CD 00 00            473 	call	_cgb_compatibility
                            474 ;	src/platformer.c 70
                            475 ;	genCall
                            476 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   013F CD A3 00            477 	call	_init_player
                            478 ;	src/platformer.c 72
                            479 ;	genAssign
   0142 01 40 FF            480 	ld	bc,#0xFF40
                            481 ;	genAssign
                            482 ;	AOP_STK for _initialize_sloc0_1_0
   0145 F8 01               483 	lda	hl,1(sp)
   0147 36 40               484 	ld	(hl),#0x40
   0149 23                  485 	inc	hl
   014A 36 FF               486 	ld	(hl),#0xFF
                            487 ;	genPointerGet
                            488 ;	AOP_STK for _initialize_sloc0_1_0
                            489 ;	AOP_STK for _initialize_sloc1_1_0
   014C 2B                  490 	dec	hl
   014D 5E                  491 	ld	e,(hl)
   014E 23                  492 	inc	hl
   014F 56                  493 	ld	d,(hl)
   0150 1A                  494 	ld	a,(de)
   0151 2B                  495 	dec	hl
   0152 2B                  496 	dec	hl
                            497 ;	genOr
                            498 ;	AOP_STK for _initialize_sloc1_1_0
   0153 77                  499 	ld      (hl),a
   0154 7F                  500 	ld      a,a
   0155 F6 02               501 	or	a,#0x02
                            502 ;	genAssign (pointer)
   0157 02                  503 	ld	(bc),a
                            504 ;	genLabel
   0158                     505 00101$:
                            506 ;	genEndFunction
   0158 E8 03               507 	lda	sp,3(sp)
   015A C9                  508 	ret
   015B                     509 ___initialize_end:
                            510 ;	src/platformer.c 75
                            511 ;	genLabel
                            512 ;	genFunction
                            513 ;	---------------------------------
                            514 ; Function main
                            515 ; ---------------------------------
   015B                     516 ___main_start:
   015B                     517 _main:
                            518 	
                            519 ;	src/platformer.c 76
                            520 ;	genCall
                            521 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   015B CD 3A 01            522 	call	_initialize
                            523 ;	src/platformer.c 78
                            524 ;	genLabel
   015E                     525 00102$:
                            526 ;	src/platformer.c 79
                            527 ;	genCall
                            528 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   015E CD 00 00            529 	call	_wait_vbl_done
                            530 ;	src/platformer.c 80
                            531 ;	genCall
                            532 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0161 CD 9C 00            533 	call	_game_loop
                            534 ;	genGoto
   0164 C3 5E 01            535 	jp	00102$
                            536 ;	genLabel
   0167                     537 00104$:
                            538 ;	genEndFunction
                            539 	
   0167 C9                  540 	ret
   0168                     541 ___main_end:
                            542 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 _PLAYER_SPRITE_BOT_DATA            0047 GR
  0 _PLAYER_SPRITE_BOT_NUM             0036 GR
  0 _PLAYER_SPRITE_BOT_PALETTE         005F GR
  0 _PLAYER_SPRITE_TOP_DATA            0037 GR
  0 _PLAYER_SPRITE_TOP_NUM             0035 GR
  0 _PLAYER_SPRITE_TOP_PALETTE         0057 GR
  0 ___draw_player_end                 009C R
  0 ___draw_player_start               0067 R
  0 ___game_loop_end                   00A3 R
  0 ___game_loop_start                 009C R
  0 ___init_player_end                 013A R
  0 ___init_player_start               00A3 R
  0 ___initialize_end                  015B R
  0 ___initialize_start                013A R
  0 ___main_end                        0168 R
  0 ___main_start                      015B R
  0 ___read_controls_end               0035 R
  0 ___read_controls_start             0000 R
    _cgb_compatibility                 **** GX
  0 _draw_player                       0067 GR
  0 _game_loop                         009C GR
  0 _init_player                       00A3 GR
  0 _initialize                        013A GR
    _joypad                            **** GX
  0 _main                              015B GR
    _move_sprite                       **** GX
  1 _player_x                          0000 GR
  1 _player_y                          0001 GR
  0 _read_controls                     0000 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  168   flags 0
   1 _DATA                              size    2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
