                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 26 14:25:22 2017
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc60660
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rand_seed
                             12 	.globl _rand_ready
                             13 	.globl _set_up_sprite
                             14 	.globl _set_up_sprite_simple
                             15 	.globl _set_up_bg
                             16 	.globl _pre_init_rand
                             17 	.globl _init_rand
                             18 	.globl _get_rand
                             19 	.globl _get_rand_ready
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; special function bits 
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
   0000                      30 _rand_ready::
   0000                      31 	.ds 1
   0001                      32 _rand_seed::
   0001                      33 	.ds 2
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area _OVERLAY
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area _ISEG
                             42 ;--------------------------------------------------------
                             43 ; bit data
                             44 ;--------------------------------------------------------
                             45 	.area _BSEG
                             46 ;--------------------------------------------------------
                             47 ; external ram data
                             48 ;--------------------------------------------------------
                             49 	.area _XSEG
                             50 ;--------------------------------------------------------
                             51 ; global & static initialisations
                             52 ;--------------------------------------------------------
                             53 	.area _GSINIT
                             54 	.area _GSFINAL
                             55 	.area _GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _HOME
                             60 	.area _CODE
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area _CODE
                             65 ;	src/utils.c 19
                             66 ;	genLabel
                             67 ;	genFunction
                             68 ;	---------------------------------
                             69 ; Function set_up_sprite
                             70 ; ---------------------------------
   0000                      71 ___set_up_sprite_start:
   0000                      72 _set_up_sprite:
                             73 	
                             74 ;	src/utils.c 20
                             75 ;	genCast
                             76 ;	AOP_STK for 
   0000 F8 04                77 	lda	hl,4(sp)
   0002 4E                   78 	ld	c,(hl)
                             79 ;	genIpush
                             80 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0003 C5                   81 	push	bc
                             82 ;	AOP_STK for 
   0004 F8 0A                83 	lda	hl,10(sp)
   0006 2A                   84 	ld	a,(hl+)
   0007 66                   85 	ld	h,(hl)
   0008 6F                   86 	ld	l,a
   0009 E5                   87 	push	hl
                             88 ;	genIpush
   000A 3E 01                89 	ld	a,#0x01
   000C F5                   90 	push	af
   000D 33                   91 	inc	sp
                             92 ;	genIpush
   000E 79                   93 	ld	a,c
   000F F5                   94 	push	af
   0010 33                   95 	inc	sp
                             96 ;	genCall
   0011 CD 00 00             97 	call	_set_sprite_data
   0014 E8 04                98 	lda	sp,4(sp)
   0016 E1                   99 	pop	hl
   0017 4D                  100 	ld	c,l
                            101 ;	src/utils.c 21
                            102 ;	genCast
                            103 ;	AOP_STK for 
   0018 F8 02               104 	lda	hl,2(sp)
   001A 46                  105 	ld	b,(hl)
                            106 ;	genIpush
                            107 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   001B C5                  108 	push	bc
   001C 79                  109 	ld	a,c
   001D F5                  110 	push	af
   001E 33                  111 	inc	sp
                            112 ;	genIpush
   001F 78                  113 	ld	a,b
   0020 F5                  114 	push	af
   0021 33                  115 	inc	sp
                            116 ;	genCall
   0022 CD 00 00            117 	call	_set_sprite_tile
   0025 E8 02               118 	lda	sp,2(sp)
   0027 E1                  119 	pop	hl
   0028 44                  120 	ld	b,h
                            121 ;	src/utils.c 23
                            122 ;	genAssign
                            123 ;	(operands are equal 3)
                            124 ;	genCast
                            125 ;	AOP_STK for 
   0029 F8 06               126 	lda	hl,6(sp)
   002B 4E                  127 	ld	c,(hl)
                            128 ;	genIpush
                            129 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   002C C5                  130 	push	bc
                            131 ;	AOP_STK for 
   002D F8 0C               132 	lda	hl,12(sp)
   002F 2A                  133 	ld	a,(hl+)
   0030 66                  134 	ld	h,(hl)
   0031 6F                  135 	ld	l,a
   0032 E5                  136 	push	hl
                            137 ;	genIpush
   0033 3E 01               138 	ld	a,#0x01
   0035 F5                  139 	push	af
   0036 33                  140 	inc	sp
                            141 ;	genIpush
   0037 79                  142 	ld	a,c
   0038 F5                  143 	push	af
   0039 33                  144 	inc	sp
                            145 ;	genCall
   003A CD 00 00            146 	call	_set_sprite_palette
   003D E8 04               147 	lda	sp,4(sp)
   003F C1                  148 	pop	bc
                            149 ;	src/utils.c 24
                            150 ;	genIpush
                            151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0040 79                  152 	ld	a,c
   0041 F5                  153 	push	af
   0042 33                  154 	inc	sp
                            155 ;	genIpush
   0043 78                  156 	ld	a,b
   0044 F5                  157 	push	af
   0045 33                  158 	inc	sp
                            159 ;	genCall
   0046 CD 00 00            160 	call	_set_sprite_prop
   0049 E8 02               161 	lda	sp,2(sp)
                            162 ;	genLabel
   004B                     163 00101$:
                            164 ;	genEndFunction
                            165 	
   004B C9                  166 	ret
   004C                     167 ___set_up_sprite_end:
                            168 ;	src/utils.c 27
                            169 ;	genLabel
                            170 ;	genFunction
                            171 ;	---------------------------------
                            172 ; Function set_up_sprite_simple
                            173 ; ---------------------------------
   004C                     174 ___set_up_sprite_simple_start:
   004C                     175 _set_up_sprite_simple:
                            176 	
                            177 ;	src/utils.c 28
                            178 ;	genIpush
                            179 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            180 ;	AOP_STK for 
   004C F8 08               181 	lda	hl,8(sp)
   004E 2A                  182 	ld	a,(hl+)
   004F 66                  183 	ld	h,(hl)
   0050 6F                  184 	ld	l,a
   0051 E5                  185 	push	hl
                            186 ;	genIpush
                            187 ;	AOP_STK for 
   0052 F8 08               188 	lda	hl,8(sp)
   0054 2A                  189 	ld	a,(hl+)
   0055 66                  190 	ld	h,(hl)
   0056 6F                  191 	ld	l,a
   0057 E5                  192 	push	hl
                            193 ;	genIpush
                            194 ;	AOP_STK for 
   0058 F8 08               195 	lda	hl,8(sp)
   005A 2A                  196 	ld	a,(hl+)
   005B 66                  197 	ld	h,(hl)
   005C 6F                  198 	ld	l,a
   005D E5                  199 	push	hl
                            200 ;	genIpush
                            201 ;	AOP_STK for 
   005E F8 08               202 	lda	hl,8(sp)
   0060 2A                  203 	ld	a,(hl+)
   0061 66                  204 	ld	h,(hl)
   0062 6F                  205 	ld	l,a
   0063 E5                  206 	push	hl
                            207 ;	genIpush
                            208 ;	AOP_STK for 
   0064 F8 0A               209 	lda	hl,10(sp)
   0066 2A                  210 	ld	a,(hl+)
   0067 66                  211 	ld	h,(hl)
   0068 6F                  212 	ld	l,a
   0069 E5                  213 	push	hl
                            214 ;	genCall
   006A CD 00 00            215 	call	_set_up_sprite
   006D E8 0A               216 	lda	sp,10(sp)
                            217 ;	genLabel
   006F                     218 00101$:
                            219 ;	genEndFunction
                            220 	
   006F C9                  221 	ret
   0070                     222 ___set_up_sprite_simple_end:
                            223 ;	src/utils.c 31
                            224 ;	genLabel
                            225 ;	genFunction
                            226 ;	---------------------------------
                            227 ; Function set_up_bg
                            228 ; ---------------------------------
   0070                     229 ___set_up_bg_start:
   0070                     230 _set_up_bg:
   0070 E8 FC               231 	lda	sp,-4(sp)
                            232 ;	src/utils.c 32
                            233 ;	genAssign
   0072 01 4F FF            234 	ld	bc,#0xFF4F
                            235 ;	genAssign (pointer)
   0075 3E 01               236 	ld	a,#0x01
   0077 02                  237 	ld	(bc),a
                            238 ;	src/utils.c 33
                            239 ;	genCast
                            240 ;	AOP_STK for 
   0078 F8 0C               241 	lda	hl,12(sp)
   007A 4E                  242 	ld	c,(hl)
                            243 ;	genCast
                            244 ;	AOP_STK for 
   007B 2B                  245 	dec	hl
   007C 2B                  246 	dec	hl
   007D 46                  247 	ld	b,(hl)
                            248 ;	genCast
                            249 ;	AOP_STK for 
                            250 ;	AOP_STK for _set_up_bg_sloc0_1_0
   007E 2B                  251 	dec	hl
   007F 2B                  252 	dec	hl
   0080 7E                  253 	ld	a,(hl)
   0081 F8 03               254 	lda	hl,3(sp)
   0083 77                  255 	ld	(hl),a
                            256 ;	genCast
                            257 ;	AOP_STK for 
                            258 ;	AOP_STK for _set_up_bg_sloc1_1_0
   0084 F8 06               259 	lda	hl,6(sp)
   0086 7E                  260 	ld	a,(hl)
   0087 F8 02               261 	lda	hl,2(sp)
   0089 77                  262 	ld	(hl),a
                            263 ;	genIpush
                            264 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   008A C5                  265 	push	bc
                            266 ;	AOP_STK for 
   008B F8 12               267 	lda	hl,18(sp)
   008D 2A                  268 	ld	a,(hl+)
   008E 66                  269 	ld	h,(hl)
   008F 6F                  270 	ld	l,a
   0090 E5                  271 	push	hl
                            272 ;	genIpush
   0091 79                  273 	ld	a,c
   0092 F5                  274 	push	af
   0093 33                  275 	inc	sp
                            276 ;	genIpush
   0094 78                  277 	ld	a,b
   0095 F5                  278 	push	af
   0096 33                  279 	inc	sp
                            280 ;	genIpush
                            281 ;	AOP_STK for _set_up_bg_sloc0_1_0
   0097 F8 09               282 	lda	hl,9(sp)
   0099 7E                  283 	ld	a,(hl)
   009A F5                  284 	push	af
   009B 33                  285 	inc	sp
                            286 ;	genIpush
                            287 ;	AOP_STK for _set_up_bg_sloc1_1_0
   009C 2B                  288 	dec	hl
   009D 7E                  289 	ld	a,(hl)
   009E F5                  290 	push	af
   009F 33                  291 	inc	sp
                            292 ;	genCall
   00A0 CD 00 00            293 	call	_set_bkg_tiles
   00A3 E8 06               294 	lda	sp,6(sp)
   00A5 C1                  295 	pop	bc
                            296 ;	src/utils.c 34
                            297 ;	genAssign
                            298 ;	AOP_STK for _set_up_bg_sloc2_1_0
   00A6 F8 00               299 	lda	hl,0(sp)
   00A8 36 4F               300 	ld	(hl),#0x4F
   00AA 23                  301 	inc	hl
   00AB 36 FF               302 	ld	(hl),#0xFF
                            303 ;	genAssign (pointer)
                            304 ;	AOP_STK for _set_up_bg_sloc2_1_0
   00AD 2B                  305 	dec	hl
   00AE 5E                  306 	ld	e,(hl)
   00AF 23                  307 	inc	hl
   00B0 56                  308 	ld	d,(hl)
   00B1 3E 00               309 	ld	a,#0x00
   00B3 12                  310 	ld	(de),a
                            311 ;	src/utils.c 36
                            312 ;	genIpush
                            313 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            314 ;	AOP_STK for 
   00B4 F8 0E               315 	lda	hl,14(sp)
   00B6 2A                  316 	ld	a,(hl+)
   00B7 66                  317 	ld	h,(hl)
   00B8 6F                  318 	ld	l,a
   00B9 E5                  319 	push	hl
                            320 ;	genIpush
   00BA 79                  321 	ld	a,c
   00BB F5                  322 	push	af
   00BC 33                  323 	inc	sp
                            324 ;	genIpush
   00BD 78                  325 	ld	a,b
   00BE F5                  326 	push	af
   00BF 33                  327 	inc	sp
                            328 ;	genIpush
                            329 ;	AOP_STK for _set_up_bg_sloc0_1_0
   00C0 F8 07               330 	lda	hl,7(sp)
   00C2 7E                  331 	ld	a,(hl)
   00C3 F5                  332 	push	af
   00C4 33                  333 	inc	sp
                            334 ;	genIpush
                            335 ;	AOP_STK for _set_up_bg_sloc1_1_0
   00C5 2B                  336 	dec	hl
   00C6 7E                  337 	ld	a,(hl)
   00C7 F5                  338 	push	af
   00C8 33                  339 	inc	sp
                            340 ;	genCall
   00C9 CD 00 00            341 	call	_set_bkg_tiles
   00CC E8 06               342 	lda	sp,6(sp)
                            343 ;	genLabel
   00CE                     344 00101$:
                            345 ;	genEndFunction
   00CE E8 04               346 	lda	sp,4(sp)
   00D0 C9                  347 	ret
   00D1                     348 ___set_up_bg_end:
                            349 ;	src/utils.c 39
                            350 ;	genLabel
                            351 ;	genFunction
                            352 ;	---------------------------------
                            353 ; Function pre_init_rand
                            354 ; ---------------------------------
   00D1                     355 ___pre_init_rand_start:
   00D1                     356 _pre_init_rand:
                            357 	
                            358 ;	src/utils.c 40
                            359 ;	genAssign
                            360 ;	AOP_HL for _rand_ready
   00D1 21 00 00            361 	ld	hl,#_rand_ready
   00D4 36 FF               362 	ld	(hl),#0xFF
                            363 ;	src/utils.c 42
                            364 ;	genAssign
   00D6 01 04 FF            365 	ld	bc,#0xFF04
                            366 ;	genPointerGet
   00D9 0A                  367 	ld	a,(bc)
   00DA 4F                  368 	ld	c,a
                            369 ;	genCast
                            370 ;	AOP_HL for _rand_seed
   00DB 21 01 00            371 	ld	hl,#_rand_seed
   00DE 71                  372 	ld	(hl),c
   00DF 23                  373 	inc	hl
   00E0 36 00               374 	ld	(hl),#0x00
                            375 ;	genLabel
   00E2                     376 00101$:
                            377 ;	genEndFunction
                            378 	
   00E2 C9                  379 	ret
   00E3                     380 ___pre_init_rand_end:
                            381 ;	src/utils.c 45
                            382 ;	genLabel
                            383 ;	genFunction
                            384 ;	---------------------------------
                            385 ; Function init_rand
                            386 ; ---------------------------------
   00E3                     387 ___init_rand_start:
   00E3                     388 _init_rand:
                            389 	
                            390 ;	src/utils.c 46
                            391 ;	genCmpEq
                            392 ;	AOP_HL for _rand_ready
                            393 ; genCmpEq: left 1, right 1, result 0
   00E3 21 00 00            394 	ld	hl,#_rand_ready
   00E6 7E                  395 	ld	a,(hl)
   00E7 B7                  396 	or	a,a
   00E8 C2 F3 00            397 	jp	nz,00102$
   00EB 18 03               398 	jr	00107$
   00ED                     399 00106$:
   00ED C3 F3 00            400 	jp	00102$
   00F0                     401 00107$:
                            402 ;	src/utils.c 47
                            403 ;	genRet
   00F0 C3 14 01            404 	jp	00103$
                            405 ;	genLabel
   00F3                     406 00102$:
                            407 ;	src/utils.c 50
                            408 ;	genAssign
                            409 ;	AOP_HL for _rand_ready
   00F3 21 00 00            410 	ld	hl,#_rand_ready
   00F6 36 00               411 	ld	(hl),#0x00
                            412 ;	src/utils.c 52
                            413 ;	genAssign
   00F8 01 04 FF            414 	ld	bc,#0xFF04
                            415 ;	genPointerGet
   00FB 0A                  416 	ld	a,(bc)
   00FC 4F                  417 	ld	c,a
                            418 ;	genCast
                            419 ; Removed redundent load
   00FD 06 00               420 	ld	b,#0x00
                            421 ;	genLeftShift
   00FF 41                  422 	ld	b,c
   0100 0E 00               423 	ld	c,#0x00
                            424 ;	genOr
                            425 ;	AOP_HL for _rand_seed
   0102 21 01 00            426 	ld	hl,#_rand_seed
   0105 7E                  427 	ld	a,(hl)
   0106 B1                  428 	or	a,c
   0107 22                  429 	ld	(hl+),a
   0108 7E                  430 	ld	a,(hl)
   0109 B0                  431 	or	a,b
                            432 ;	src/utils.c 53
                            433 ;	genIpush
                            434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            435 ;	AOP_HL for _rand_seed
   010A 32                  436 	ld      (hl-),a
   010B 2A                  437 	ld	a,(hl+)
   010C 66                  438 	ld	h,(hl)
   010D 6F                  439 	ld	l,a
   010E E5                  440 	push	hl
                            441 ;	genCall
   010F CD 00 00            442 	call	_initarand
   0112 E8 02               443 	lda	sp,2(sp)
                            444 ;	genLabel
   0114                     445 00103$:
                            446 ;	genEndFunction
                            447 	
   0114 C9                  448 	ret
   0115                     449 ___init_rand_end:
                            450 ;	src/utils.c 56
                            451 ;	genLabel
                            452 ;	genFunction
                            453 ;	---------------------------------
                            454 ; Function get_rand
                            455 ; ---------------------------------
   0115                     456 ___get_rand_start:
   0115                     457 _get_rand:
   0115 E8 FC               458 	lda	sp,-4(sp)
                            459 ;	src/utils.c 59
                            460 ;	genCall
                            461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0117 CD 00 00            462 	call	_arand
   011A 4B                  463 	ld	c,e
                            464 ;	genPlus
                            465 ;	AOP_STK for 
                            466 ;	AOP_STK for _get_rand_sloc0_1_0
                            467 ;	genPlusIncr
                            468 ;	Can't optimise plus by inc, falling back to the normal way
   011B F8 08               469 	lda	hl,8(sp)
   011D 5E                  470 	ld	e,(hl)
   011E 23                  471 	inc	hl
   011F 56                  472 	ld	d,(hl)
   0120 21 01 00            473 	ld	hl,#0x0001
   0123 19                  474 	add	hl,de
   0124 7D                  475 	ld	a,l
   0125 54                  476 	ld	d,h
   0126 F8 02               477 	lda	hl,2(sp)
   0128 22                  478 	ld	(hl+),a
   0129 72                  479 	ld	(hl),d
                            480 ;	genMinus
                            481 ;	AOP_STK for _get_rand_sloc0_1_0
                            482 ;	AOP_STK for 
                            483 ;	AOP_STK for _get_rand_sloc1_1_0
   012A 2B                  484 	dec	hl
   012B 5E                  485 	ld	e,(hl)
   012C 23                  486 	inc	hl
   012D 56                  487 	ld	d,(hl)
   012E F8 06               488 	lda	hl,6(sp)
   0130 2A                  489 	ld	a,(hl+)
   0131 66                  490 	ld	h,(hl)
   0132 6F                  491 	ld	l,a
   0133 7B                  492 	ld	a,e
   0134 95                  493 	sub	a,l
   0135 5F                  494 	ld	e,a
   0136 7A                  495 	ld	a,d
   0137 9C                  496 	sbc	a,h
   0138 F8 01               497 	lda	hl,1(sp)
   013A 32                  498 	ld      (hl-),a
   013B 73                  499 	ld	(hl),e
                            500 ;	genCast
                            501 ; Removed redundent load
   013C 79                  502 	ld	a,c
   013D 17                  503 	rla	
   013E 9F                  504 	sbc	a,a
   013F 47                  505 	ld	b,a
                            506 ;	genIpush
                            507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            508 ;	AOP_STK for _get_rand_sloc1_1_0
   0140 2A                  509 	ld	a,(hl+)
   0141 66                  510 	ld	h,(hl)
   0142 6F                  511 	ld	l,a
   0143 E5                  512 	push	hl
                            513 ;	genIpush
   0144 C5                  514 	push	bc
                            515 ;	genCall
   0145 CD 00 00            516 	call	__modsint_rrx_s
   0148 42                  517 	ld	b,d
   0149 4B                  518 	ld	c,e
   014A E8 04               519 	lda	sp,4(sp)
                            520 ;	genPlus
                            521 ;	AOP_STK for 
                            522 ;	Can't optimise plus by inc, falling back to the normal way
   014C F8 06               523 	lda	hl,6(sp)
   014E 2A                  524 	ld	a,(hl+)
   014F 66                  525 	ld	h,(hl)
   0150 6F                  526 	ld	l,a
   0151 09                  527 	add	hl,bc
   0152 4D                  528 	ld	c,l
   0153 44                  529 	ld	b,h
                            530 ;	genCast
                            531 ; Removed redundent load
                            532 ;	genRet
   0154 59                  533 	ld	e,c
                            534 ;	genLabel
   0155                     535 00101$:
                            536 ;	genEndFunction
   0155 E8 04               537 	lda	sp,4(sp)
   0157 C9                  538 	ret
   0158                     539 ___get_rand_end:
                            540 ;	src/utils.c 62
                            541 ;	genLabel
                            542 ;	genFunction
                            543 ;	---------------------------------
                            544 ; Function get_rand_ready
                            545 ; ---------------------------------
   0158                     546 ___get_rand_ready_start:
   0158                     547 _get_rand_ready:
                            548 	
                            549 ;	src/utils.c 63
                            550 ;	genRet
                            551 ;	AOP_HL for _rand_ready
   0158 21 00 00            552 	ld	hl,#_rand_ready
   015B 5E                  553 	ld	e,(hl)
                            554 ;	genLabel
   015C                     555 00101$:
                            556 ;	genEndFunction
                            557 	
   015C C9                  558 	ret
   015D                     559 ___get_rand_ready_end:
                            560 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___get_rand_end                    0158 R
  0 ___get_rand_ready_end              015D R
  0 ___get_rand_ready_start            0158 R
  0 ___get_rand_start                  0115 R
  0 ___init_rand_end                   0115 R
  0 ___init_rand_start                 00E3 R
  0 ___pre_init_rand_end               00E3 R
  0 ___pre_init_rand_start             00D1 R
  0 ___set_up_bg_end                   00D1 R
  0 ___set_up_bg_start                 0070 R
  0 ___set_up_sprite_end               004C R
  0 ___set_up_sprite_simple_end        0070 R
  0 ___set_up_sprite_simple_start      004C R
  0 ___set_up_sprite_start             0000 R
    __modsint_rrx_s                    **** GX
    _arand                             **** GX
  0 _get_rand                          0115 GR
  0 _get_rand_ready                    0158 GR
  0 _init_rand                         00E3 GR
    _initarand                         **** GX
  0 _pre_init_rand                     00D1 GR
  1 _rand_ready                        0000 GR
  1 _rand_seed                         0001 GR
    _set_bkg_tiles                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  0 _set_up_bg                         0070 GR
  0 _set_up_sprite                     0000 GR
  0 _set_up_sprite_simple              004C GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  15D   flags 0
   1 _DATA                              size    3   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
